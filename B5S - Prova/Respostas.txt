Pergunta 1:
/**
 * The function should recive an integer between 1 and 12 (inclusive) and return the corresponding string value. If the informed integger is not between 1 and 12, the function should return 'Unknown Month'
 * Ex: input: 1 - output: "January"
 * Ex: input: 13 - output: "Unknown Month"
 *
 * A função recebe um inteiro entre 1 e 12 e retorna o mês correspondente por extenso. Caso o mês informado não esteja entre 1 e 12, deverá ser retornado "Mes Inexistente"
 * Ex: input: 1 	- output: "Janeiro"
 * Ex: input: 13 	- output: "Mês Desconhecido"
 *
 * @param int $month
 * @return string
 */
function correspondingMonth(int $month):string{}
function mesCorrespondente(int $mes):string{}

Resposta:
public void mesCorrespondente(int mes) {
	switch (mes) {
	case 1:
		System.out.println("Janeiro");
		break;
	case 2:
		System.out.println("Fevereiro");
		break;
	case 3:
		System.out.println("Março");
		break;
	case 4:
		System.out.println("Abril");
		break;
	case 5:
		System.out.println("Maio");
		break;
	case 6:
		System.out.println("Junho");
		break;
	case 7:
		System.out.println("Julho");
		break;
	case 8:
		System.out.println("Agosto");
		break;
	case 9:
		System.out.println("Setembro");
		break;
	case 10:
		System.out.println("Outubro");
		break;
	case 11:
		System.out.println("Novembro");
		break;
	case 12:
		System.out.println("Dezembro");
		break;
	default:
		System.out.println("Mês Desconhecido");
	}
}

Pergunta 2:
/**
 * The function should recive an array with at least 3 itens and return the arithmetic average of all the itens.
 * If the recived array contains less then 3 itens, the function should return the boolean false.
 * Ex: input: [4,6,8] 	- output 6
 * Ex: input: [1,2] 	- output false
 *
 * A função deverá receber um array com pelo menos 3 itens e retornar a média simples de todos os itens do array.
 * Caso o array recebido possua menos que 3 itens, deverá ser retornado o boleano false.
 * Ex: input: [4,6,8] 	- output 6
 * Ex: input: [1,2] 	- output false
 *
 * @param array $notas
 * @return int|bool
 */
function arithmeticAverage(array $integers){}
function mediaSimples(array $notas){}

Resposta:
public int mediaSimples(int[] array) {
	int soma = 0;
	if (array.length < 3) {
		return 0;// false
	} else {
		for (int i = 0; i <= array.length - 1; i++) {
			soma = soma + array[i];
			if (i == array.length - 1) {
				soma = soma / array.length;
				return soma;
			}
		}
	}
	return 0;
}


Pergunta 3:
/**
 * The function should expect an array containing integers greater than zero and return the amount of even values contained in it.
 * Ex: input: [1,2,3,4,5] - output: 2
 *
 * Recebe um array de inteiros maiores que zero e retorna a quantidade de números pares existentes no array
 * Ex: input: [1,2,3,4,5] - output: 2
 *
 * @param array $array
 * @return int
 */
function oddOrEven(int $number):bool{}
function parOuImpar(int $numero):bool{}

Resposta:
public int parOuImpar(int[] array) {
	int pares = 0;
	for (int i = 0; i <= array.length - 1; i++) {
		if (array[i] > 0 && array[i] % 2 == 0) {
			pares++;
		}
	}
	return pares;
}

Pergunta 4:
/**
 * The function should expect a string and return it backwards.
 * Ex: input: "foo" - output: "oof"
 *
 * A função deverá receber uma string e retornar a mesma invertida.
 * Ex: input: "bar" - output: "rab"
 *
 * @param string $string
 * @return string
 */
function reverseString(string $string):string{}
function inverterString(string $string):string{}

Resposta:
public static String inverterString(String string) {
	String inverso = "";
	char arrayChar[] = string.toCharArray();
	for (int i = arrayChar.length - 1; i >= 0; i--) {
		inverso += String.valueOf(arrayChar[i]);
	}
	return inverso;
}

Pergunta 5:
/**
 * The function must replace all the vowels with '?' and return the result string
 * Ex: input: 'Foo' - output: 'F??'
 *
 * A função deverá receber uma string e substituir todas as vogais da mesma pelo sinal '?'
 * Ex: input: 'Bar' - output: 'B?r'
 *
 * @param string $string
 * @return string
 */
function replaceWowels(string $string):string{}
function substituirCaracteres(string $string):string{}

Resposta:
public static String substituirCaracteres(String string) {
	string = string.replace('a', '?');
	string = string.replace('e', '?');
	string = string.replace('i', '?');
	string = string.replace('o', '?');
	string = string.replace('u', '?');
	return string;
}

Pergunta 6:
/**
 * The function must expect an array of integers and sort it in ascending order
 * Ex: Input: [5,1,0,7,3,3] - Output: [0,1,3,3,5,7]
 *
 * A função deverá receber um array de inteiros como parâmetro e deverá retornar o mesmo array ordenado em ordem crescente.
 * Ex: Input: [5,1,0,7,3,3] - Output: [0,1,3,3,5,7]
 *
 * @param array $array - Array a ser ordenado
 * @return array
 */
function arraySort(array $array):array{}
function ordenarArray(array $array):array{}

Resposta:
public static int[] ordenarArray(int[] array) {
	int aux, ord;
	for (int i = 0; i <= array.length - 1; i++) {
		if (i == array.length - 1) {
			for (int x = 0; x <= array.length - 1; x++) {
				if (x == array.length - 1) {
					return array;
				}
				if (array[x] > array[x + 1]) {
					i = 0;
					break;
				}
			}
		}
		if (array[i] > array[i + 1]) {
			aux = array[i + 1];
			ord = array[i];
			array[i] = aux;
			array[i + 1] = ord;
		}
	}
	return array;
}

Pergunta 7:
/**
 * The function must expect an array of integers and return the first non-repeated value.
 * Ex: input: [2,2,3,1,1,6] - output: 3
 *
 * A função irá receber um array de inteiros e retornar o primeiro elemento não repetido.
 * Ex: input: [2,2,3,1,1,6] - output: 3
 *
 * @param array $array - Array contendo inteiros
 * @return int
 */
function firstNonRepeatedValue(array $array):int{}
function primeiroValorNaoRepetido(array $array):int{}

Resposta:
public static int primeiroValorNaoRepetido(int[] array) {
		for (int i = 0; i <= array.length - 1; i++) {
			int aux1 = 0;
			for (int x = 0; x <= array.length - 1; x++) {
				if (array[i] == array[x]) {
					aux1++;
				}
			}
			if (aux1 < 2) {
				return array[i];
			}
		}
		return 0;
	}


Pergunta 11:
/**
 * In the context of object orientation, write the diferences between classes, objects, instances and interfaces:
 *
 * Escreva a diferença entre interfaces, instancias, objetos e classes no contexto de orientação a objeto:
 *
 */
 
Resposta:
Interface: A interface é onde fica listado quais os métodos que as classes irão conter em seu desenvolvimento, é como se fosse por exemplo um contrato entre a classe e o mundo exterior, no qual teria listado tudo o que a classe deve conter.

Classes: As classes é algo abstrato, no qual define todos os elementos que o programa terá e as características básicas de como será composto. Ela determina os estados possíveis e os comportamentos que os objetos podem ter.

Objetos: O objeto é algo que pode ser manipulado, objeto possui valores para os estados definidos e chamam os comportamentos definidos executando os algoritmos. Então o objeto é uma instância da classe. Na classe você pode dizer que aquele objeto terá uma cor, no objeto você diz qual é a cor, só pode dizer isso porque foi definido na classe que essa informação deve estar no objeto. 